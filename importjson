def is_fibonacci(n):
    if n < 0:
        return False
    a, b = 0, 1
    while a < n:
        a, b = b, a + b
    return a == n

# Exemplo de uso
numero = int(input("Informe um número: "))
if is_fibonacci(numero):
    print(f"{numero} pertence à sequência de Fibonacci.")
else:
    print(f"{numero} não pertence à sequência de Fibonacci.")
    {
  "faturamento": [0, 200, 300, 0, 400, 500, 0, 600, 700, 800, 0, 0, 900, 0, 1000, 1100, 0, 1200, 1300, 0, 1400, 0, 1500, 1600, 1700, 0, 1800, 1900, 2000, 2100, 2200]
}
 import json

# Leitura do JSON
data = '''
{
  "faturamento": [0, 200, 300, 0, 400, 500, 0, 600, 700, 800, 0, 0, 900, 0, 1000, 1100, 0, 1200, 1300, 0, 1400, 0, 1500, 1600, 1700, 0, 1800, 1900, 2000, 2100, 2200]
}
'''
faturamento_diario = json.loads(data)["faturamento"]

# Ignorar dias sem faturamento
dias_com_faturamento = [valor for valor in faturamento_diario if valor > 0]

# Cálculo do menor e maior valor
menor_valor = min(dias_com_faturamento)
maior_valor = max(dias_com_faturamento)

# Cálculo da média mensal
media_mensal = sum(dias_com_faturamento) / len(dias_com_faturamento)

# Contar dias acima da média
dias_acima_media = len([valor for valor in dias_com_faturamento if valor > media_mensal])

print(f"Menor valor de faturamento: R${menor_valor:.2f}")
print(f"Maior valor de faturamento: R${maior_valor:.2f}")
print(f"Número de dias com faturamento acima da média: {dias_acima_media}") 
# Valores de faturamento
faturamento_estado = {
    "SP": 67836.43,
    "RJ": 36678.66,
    "MG": 29229.88,
    "ES": 27165.48,
    "Outros": 19849.53
}

# Total de faturamento
total_faturamento = sum(faturamento_estado.values())

# Cálculo do percentual de representação
percentuais = {estado: (valor / total_faturamento) * 100 for estado, valor in faturamento_estado.items()}

for estado, percentual in percentuais.items():
    print(f"Percentual de representação de {estado}: {percentual:.2f}%")  
    def inverter_string(s):
    return ''.join(reversed(s))

# Exemplo de uso
string_original = input("Informe uma string: ")
string_invertida = inverter_string(string_original)
print(f"String invertida: {string_invertida}")